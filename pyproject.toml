[tool.poetry]
name = "pcax"
version = "0.1.0"
description = "A library for efficient Predictive Coding networks"
authors = ["Luca Pinchetti <luca.pinchetti@cs.ox.ac.uk>"]
license = "Propriaetary. Confidential. No part of this work can be disclosed or shared without the explicit consent of the authors."
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"
optax = "^0.1.5"
equinox = "^0.11.1"
tox = "^4.6.4"
isort = "^5.12.0"
scikit-learn = "^1.3.0"
tqdm = "^4.65.0"
matplotlib = "^3.7.2"
seaborn = "^0.12.2"
wandb = "^0.15.5"
ray = {extras = ["tune"], version = "^2.5.1"}
optuna = "^3.2.0"
numpy = "~1.24"
gputil = "^1.4.0"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
mypy = "^1.4.1"
pytest = "^7.4.0"
jupyter = "^1.0.0"
scikit-learn = "^1.4.2"

[tool.pytest.ini_options]
addopts = "--cov=pcax"
testpaths = [
    "tests",
]

[tool.mypy]
mypy_path = "pcax"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.black]
line-length = 120
